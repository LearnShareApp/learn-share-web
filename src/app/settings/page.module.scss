@use "../../styles/variables.scss" as *;
@use "sass:color";

.container {
  width: 100%;
  max-width: $container-max-width;
  margin: 0 auto;
  padding: $container-padding;
}

.title {
  font-size: $font-size-2xl;
  font-weight: $font-weight-bold;
  color: $color-text-primary;
  margin-bottom: 24px;
  padding-bottom: 12px;
  border-bottom: 1px solid $color-border;
}

.settingsLayout {
  display: flex;
  gap: 16px;
  align-items: flex-start;

  @media (max-width: $breakpoint-md) {
    flex-direction: column;
  }
}

.sidebar {
  width: 240px;
  flex-shrink: 0;
  background-color: $color-background-primary;
  border-radius: $border-radius-lg;
  box-shadow: $shadow-md;
  overflow: hidden;

  @media (max-width: $breakpoint-md) {
    width: 100%;
  }
}

.sidebarItem {
  display: flex;
  align-items: center;
  gap: 12px;
  padding: 16px 20px;
  color: $color-text-primary;
  transition: background-color $transition-fast, color $transition-fast;
  cursor: pointer;

  &:hover {
    background-color: $color-background-secondary;
  }

  &.active {
    background-color: $color-primary-light;
    color: $color-primary-dark;
    font-weight: $font-weight-semibold;
    border-left: 3px solid $color-primary;
  }

  svg {
    font-size: 20px;
  }
}

.content {
  flex: 1;
  background-color: $color-background-primary;
  border-radius: $border-radius-lg;
  box-shadow: $shadow-md;
  padding: 24px;
}

.section {
  margin-bottom: 32px;

  &:last-child {
    margin-bottom: 0;
  }
}

.sectionTitle {
  font-size: $font-size-xl;
  font-weight: $font-weight-semibold;
  color: $color-text-primary;
  margin-bottom: 20px;
  display: flex;
  align-items: center;
  gap: 12px;
}

.sectionIcon {
  color: $color-primary;
}

// Улучшенный селектор языка
.languageSelector {
  display: flex;
  flex-direction: column;
  gap: 12px;
  max-width: 500px;
}

.languageOption {
  display: flex;
  align-items: center;
  padding: 16px 20px;
  background-color: $color-background-secondary;
  border-radius: $border-radius-lg;
  cursor: pointer;
  transition: all $transition-fast;
  position: relative;

  &:hover {
    background-color: color.adjust(
      $color-background-secondary,
      $lightness: -3%
    );
    transform: translateY(-2px);
  }

  &.selected {
    background-color: color.adjust($color-primary-light, $alpha: -0.7);
    border: 1px solid $color-primary-light;
  }
}

.languageFlag {
  font-size: 28px;
  margin-right: 16px;
}

.languageInfo {
  display: flex;
  flex-direction: column;
  flex: 1;
}

.languageName {
  font-weight: $font-weight-semibold;
  color: $color-text-primary;
  font-size: $font-size-base;
}

.languageNative {
  color: $color-text-secondary;
  font-size: $font-size-sm;
}

.selectedIndicator {
  width: 20px;
  height: 20px;
  border-radius: 50%;
  background-color: $color-primary;
  position: relative;

  &:before {
    content: "";
    position: absolute;
    width: 10px;
    height: 5px;
    border-left: 2px solid white;
    border-bottom: 2px solid white;
    top: 45%;
    left: 50%;
    transform: translate(-50%, -50%) rotate(-45deg);
  }
}

// Базовые стили для сообщений
%message-base {
  font-size: $font-size-sm;
  text-align: center;
  margin-top: 1rem;
  margin-bottom: 1.5rem;
  padding: 0.75rem;
  border-radius: $border-radius-md;
}

// Базовые стили для кнопок и элементов, похожих на кнопки
%button-like {
  display: inline-block;
  border-radius: $border-radius-md;
  font-weight: $font-weight-medium;
  font-size: $font-size-sm;
  cursor: pointer;
  text-align: center;
  transition: background-color $transition-fast, border-color $transition-fast,
    color $transition-fast, transform $transition-fast;
}

// Стили, перенесенные и адаптированные из src/app/profile/edit/page.module.scss

.profileLayout {
  // Используется для основной раскладки: аватар слева, поля справа
  display: flex;
  flex-direction: row;
  gap: 2.5rem; // 40px
  margin-bottom: 2rem; // 32px

  @media (max-width: $breakpoint-md) {
    flex-direction: column;
    align-items: center;
  }
}

.avatarSection {
  // Секция для аватара и кнопки его смены
  display: flex;
  flex-direction: row;
  align-items: center;
  gap: 20px;
  flex-shrink: 0;

  @media (max-width: $breakpoint-md) {
    // width: 100%;
    // flex-direction: column;
    // margin-bottom: 2rem;
    // padding-bottom: 2rem;
    // border-bottom: 1px solid $color-border;
  }
}

.avatarPreview {
  // Обертка для компонента Avatar
  margin-bottom: 0;
  border-radius: 50%;
  overflow: hidden;
  box-shadow: $shadow-sm;
  width: 100px;
  height: 100px;
  flex-shrink: 0;
}

.avatarControls {
  // Контейнер для кнопки смены аватара
  display: flex;
  flex-direction: column;
  align-items: flex-start;
  gap: 12px;
  max-width: 280px;
}

.fileInputLabel {
  // Стилизация <label> для кастомного input[type="file"]
  // @extend %button-like;
  // padding: 0.65rem 1.3rem; // Немного уменьшил паддинги
  // background-color: $color-background-secondary;
  // color: $color-text-primary;
  // margin-top: 0.5rem;
  // &:hover {
  //   background-color: $color-background-tertiary;
  // }
  // Этот класс можно либо удалить, если он больше нигде не используется,
  // либо оставить, если предполагается его использование в других местах
  // Пока что закомментирую его содержимое, так как кнопка UPLOAD теперь имеет другие классы
}

.fileInput {
  // Скрываем стандартный input[type="file"]
  position: absolute;
  width: 1px;
  height: 1px;
  padding: 0;
  margin: -1px;
  overflow: hidden;
  clip: rect(0, 0, 0, 0);
  border: 0;
}

.formFields {
  // Контейнер для полей формы (имя, фамилия, дата рождения)
  display: flex;
  flex-direction: column;
  gap: 1.25rem; // 20px, немного уменьшил
  flex-grow: 1;
}

.formRow {
  // Для группировки полей в одну строку (например, имя и фамилия)
  display: flex;
  gap: 1.25rem;

  @media (max-width: $breakpoint-sm) {
    // Адаптивность для маленьких экранов
    flex-direction: column;
  }
}

.formGroup {
  // Группа: лейбл + инпут
  display: flex;
  flex-direction: column;
  flex: 1;

  label {
    font-weight: $font-weight-medium;
    margin-bottom: 0.5rem;
    color: $color-text-secondary;
    font-size: $font-size-sm;
  }
}

.input {
  // Стили для input полей
  padding: 0.65rem 0.9rem; // Немного уменьшил паддинги
  border: 1px solid $color-border;
  border-radius: $border-radius-md;
  font-size: $font-size-base;
  outline: none;
  background-color: $color-background-primary;
  color: $color-text-primary;
  transition: border-color $transition-fast, box-shadow $transition-fast;

  &:focus {
    border-color: $color-primary;
    box-shadow: 0 0 0 2px rgba($color-primary, 0.2);
  }

  &::placeholder {
    color: $color-text-secondary;
    opacity: 0.7;
  }
}

.errorMessage, // Общие стили для сообщений об ошибке и успехе
.successMessage {
  @extend %message-base;
}

.errorMessage {
  color: $color-text-error;
  background-color: rgba($color-text-error, 0.1);
  border: 1px solid rgba($color-text-error, 0.2);
}

.successMessage {
  color: $color-success; // Используем переменную для цвета успеха
  background-color: rgba($color-success, 0.1);
  border: 1px solid rgba($color-success, 0.2);
}

.formActions {
  // Контейнер для кнопок "Отмена" и "Сохранить"
  display: flex;
  justify-content: flex-end;
  gap: 1rem;
  margin-top: 1.5rem; // Добавил отступ сверху

  @media (max-width: $breakpoint-sm) {
    // Адаптивность для маленьких экранов
    flex-direction: column-reverse;
    gap: 0.75rem;
    button {
      width: 100%;
    }
  }
}

.cancelButton, // Стили для кнопок
.submitButton {
  @extend %button-like;
  padding: 0.7rem 1.4rem;
}

.cancelButton {
  border: 1px solid $color-border-dark; // Заменено с $color-border-strong, "Более явная граница"
  background-color: transparent;
  color: $color-text-secondary;

  &:hover:not(:disabled) {
    background-color: $color-background-secondary;
    border-color: $color-border;
    color: $color-text-primary;
  }

  &:disabled {
    background-color: $color-background-tertiary;
    cursor: not-allowed;
    opacity: 0.7;
  }
}

.submitButton {
  border: 1px solid $color-primary; // Добавил границу для консистентности
  background-color: $color-primary;
  color: $color-text-light;

  &:hover:not(:disabled) {
    background-color: $color-primary-dark;
    border-color: $color-primary-dark;
  }

  &:disabled {
    background-color: color.scale(
      $color-primary,
      $lightness: 40%,
      $alpha: -50%
    ); // Сделал более блеклым
    border-color: color.scale(
      $color-primary,
      $lightness: 40%,
      $alpha: -70%
    ); // Исправлено с -0.7 на -70%
    color: rgba($color-text-light, 0.7);
    cursor: not-allowed;
  }
}

// Стили для элементов настроек по типу italki
.settingItem {
  display: flex;
  align-items: center; // Выравнивание по центру для элементов разной высоты
  justify-content: space-between;
  padding: 20px 0; // Отступы сверху/снизу
  border-bottom: 1px solid $color-border-light; // Разделитель как в italki

  &:last-child {
    border-bottom: none;
  }

  @media (max-width: $breakpoint-sm) {
    // Адаптивность для маленьких экранов
    flex-direction: column;
    align-items: flex-start;
    gap: 8px;
    padding: 16px 0;
  }
}

.settingLabel {
  font-size: $font-size-base;
  font-weight: $font-weight-medium;
  color: $color-text-primary;
  flex-basis: 200px; // Фиксированная или минимальная ширина для метки
  flex-shrink: 0;
  margin-right: 24px; // Отступ справа от метки

  @media (max-width: $breakpoint-sm) {
    flex-basis: auto;
    margin-right: 0;
    margin-bottom: 4px; // Небольшой отступ снизу на мобильных
    font-weight: $font-weight-semibold; // Сделать чуть жирнее на мобильных для акцента
  }
}

.settingControl {
  flex: 1; // Занимает оставшееся пространство
  display: flex;
  align-items: center;
  justify-content: flex-start; // Выравнивание контента контрола по левому краю
  gap: 16px; // Отступ между элементами внутри контрола (например, текст и кнопка)

  span {
    // Для отображения текстовых значений (как email)
    font-size: $font-size-base;
    color: $color-text-secondary;
  }

  @media (max-width: $breakpoint-sm) {
    width: 100%; // На мобильных контрол занимает всю ширину
  }
}

// Стили для формы профиля внутри вкладки "Общие"
.profileForm {
  .settingItem {
    padding: 16px 0;
  }
  .avatarSection {
    padding: 0;
    @media (max-width: $breakpoint-sm) {
      flex-direction: column;
      align-items: flex-start;
      .avatarPreview {
        margin-bottom: 16px;
      }
      .avatarControls {
        margin-top: 0;
      }
    }
  }
  .formActions {
    margin-top: 24px;
    padding-top: 16px;
    display: flex;
    justify-content: flex-end;
    gap: 16px;
  }
}

// Общие стили для полей ввода и селектов
%form-control-base {
  padding: 10px 14px;
  font-size: $font-size-base;
  border: 1px solid $color-border-dark;
  border-radius: $border-radius-md;
  background-color: $color-background-primary;
  color: $color-text-primary;
  transition: border-color $transition-fast, box-shadow $transition-fast;
  width: 100%; // По умолчанию занимают всю доступную ширину в своем контейнере
  max-width: 400px; // Ограничение максимальной ширины

  &:focus {
    outline: none;
    border-color: $color-primary;
    box-shadow: 0 0 0 2px rgba($color-primary, 0.2);
  }

  &::placeholder {
    color: $color-text-secondary;
    opacity: 0.7;
  }
}

.inputField {
  @extend %form-control-base;
}

.selectField {
  @extend %form-control-base;
  appearance: none; // Убираем стандартную стрелку
  background-image: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' width='16' height='16' fill='%234B5563' viewBox='0 0 16 16'%3E%3Cpath fill-rule='evenodd' d='M1.646 4.646a.5.5 0 0 1 .708 0L8 10.293l5.646-5.647a.5.5 0 0 1 .708.708l-6 6a.5.5 0 0 1-.708 0l-6-6a.5.5 0 0 1 0-.708z'/%3E%3C/svg%3E");
  background-repeat: no-repeat;
  background-position: right 14px center;
  padding-right: 40px; // Место для кастомной стрелки
}

// Стили для кнопок
.button {
  @extend %button-like; // Используем базовый %button-like
  padding: 10px 20px;
  border: 1px solid transparent;
  font-weight: $font-weight-medium; // Немного увеличил жирность для лучшей читаемости

  svg {
    margin-right: 8px; // Если внутри кнопки есть иконка
  }

  &:hover {
    transform: translateY(-1px);
  }

  &:active {
    transform: translateY(0);
  }
}

.buttonPrimary {
  @extend .button; // Наследуем общие стили .button
  background-color: $color-primary;
  color: $color-text-light;
  border-color: $color-primary;

  &:hover {
    background-color: $color-primary-dark;
    border-color: $color-primary-dark;
  }
}

.buttonSecondary {
  @extend .button;
  background-color: transparent;
  color: $color-text-primary;
  border-color: $color-border-dark;

  &:hover {
    background-color: $color-background-secondary;
    border-color: $color-border-dark;
  }
}

// Для кнопок, которые выглядят как ссылки (например, "Change Email")
.buttonLink {
  background: none;
  border: none;
  color: $color-primary;
  padding: 0;
  font-size: $font-size-base;
  text-decoration: underline;
  cursor: pointer;

  &:hover {
    color: $color-primary-dark;
  }
}

// Радио-группа для формата времени
.radioGroup {
  display: flex;
  gap: 16px;
  align-items: center;

  label {
    display: flex;
    align-items: center;
    gap: 8px;
    font-size: $font-size-base;
    color: $color-text-primary;
    cursor: pointer;
  }

  input[type="radio"] {
    // Стилизация радио-кнопок может быть сложной и кроссбраузерной
    // Здесь простой вариант, можно улучшить кастомными стилями или библиотекой
    accent-color: $color-primary; // Для современных браузеров
  }
}

// Убираем лишние стили для выбора языка, так как теперь он обычный selectField
.languageSelector {
  // display: flex; // Эти стили больше не нужны в таком виде
  // flex-direction: column;
  // gap: 12px;
  // max-width: 500px;
}

.languageOption {
  // display: flex; // Эти стили больше не нужны
  // ... и остальные стили для .languageOption, .languageFlag, .languageInfo, .selectedIndicator
  // Удаляем их, так как теперь это стандартный select
}
.languageFlag,
.languageInfo,
.languageName,
.languageNative,
.selectedIndicator {
  display: none; // Скрываем, так как не используются с select
}
